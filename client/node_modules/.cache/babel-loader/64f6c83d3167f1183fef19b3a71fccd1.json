{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/DailyChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BsGraphUp } from \"react-icons/bs\"; // import { Modal } from \"react-responsive-modal\";\n\nimport \"react-responsive-modal/styles.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DailyChart = function ({\n  daily\n}) {\n  _s();\n\n  console.log(daily);\n  const [chartData, setChartData] = useState({\n    labels: [`${daily[0][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `, `${daily[4][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `, `${daily[8][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `, `${daily[12][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `, `${daily[16][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `, `${daily[20][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `],\n    datasets: [{\n      label: \"Temperature graph\",\n      data: [32, 45, 12, 75, 69],\n      background: [\"rgba(75,192,192,0.6)\"],\n      borderWidth: 4,\n      yAxisID: \"y-axis-1\"\n    }]\n  });\n  const options = {\n    responsive: true,\n    scales: {\n      yAxes: [{\n        type: \"linear\",\n        display: true,\n        position: \"left\",\n        id: \"y-axis-1\"\n      }, {\n        type: \"linear\",\n        display: true,\n        position: \"right\",\n        id: \"y-axis-2\",\n        gridLines: {\n          drawOnArea: false\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DailyChart, \"uWzzfl6Nn3mRkz9jgavbp4GI47E=\");\n\n_c = DailyChart;\nexport default DailyChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyChart\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/DailyChart.js"],"names":["React","useState","BsGraphUp","Line","DailyChart","daily","console","log","chartData","setChartData","labels","match","datasets","label","data","background","borderWidth","yAxisID","options","responsive","scales","yAxes","type","display","position","id","gridLines","drawOnArea"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CACA;;AACA,OAAO,mCAAP;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,UAAU,GAAG,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAAqB;AAAA;;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC;AACvCS,IAAAA,MAAM,EAAE,CACH,GAAEL,KAAK,CAAC,CAAD,CAAL,CAAS,QAAT,EAAmBM,KAAnB,CAAyB,eAAzB,CAA0C,MADzC,EAEH,GAAEN,KAAK,CAAC,CAAD,CAAL,CAAS,QAAT,EAAmBM,KAAnB,CAAyB,eAAzB,CAA0C,MAFzC,EAGH,GAAEN,KAAK,CAAC,CAAD,CAAL,CAAS,QAAT,EAAmBM,KAAnB,CAAyB,eAAzB,CAA0C,MAHzC,EAIH,GAAEN,KAAK,CAAC,EAAD,CAAL,CAAU,QAAV,EAAoBM,KAApB,CAA0B,eAA1B,CAA2C,MAJ1C,EAKH,GAAEN,KAAK,CAAC,EAAD,CAAL,CAAU,QAAV,EAAoBM,KAApB,CAA0B,eAA1B,CAA2C,MAL1C,EAMH,GAAEN,KAAK,CAAC,EAAD,CAAL,CAAU,QAAV,EAAoBM,KAApB,CAA0B,eAA1B,CAA2C,MAN1C,CAD+B;AASvCC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,mBADX;AAEIC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAFV;AAGIC,MAAAA,UAAU,EAAE,CAAC,sBAAD,CAHhB;AAIIC,MAAAA,WAAW,EAAE,CAJjB;AAKIC,MAAAA,OAAO,EAAE;AALb,KADM;AAT6B,GAAD,CAA1C;AAoBA,QAAMC,OAAO,GAAG;AACZC,IAAAA,UAAU,EAAE,IADA;AAEZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,IAAI,EAAE,QADV;AAEIC,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,QAAQ,EAAE,MAHd;AAIIC,QAAAA,EAAE,EAAE;AAJR,OADG,EAOH;AACIH,QAAAA,IAAI,EAAE,QADV;AAEIC,QAAAA,OAAO,EAAE,IAFb;AAGIC,QAAAA,QAAQ,EAAE,OAHd;AAIIC,QAAAA,EAAE,EAAE,UAJR;AAKIC,QAAAA,SAAS,EAAE;AACPC,UAAAA,UAAU,EAAE;AADL;AALf,OAPG;AADH;AAFI,GAAhB;AAsBA,sBACI;AAAA,eACK,GADL,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEnB,SAAZ;AAAuB,MAAA,OAAO,EAAEU;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAlDD;;GAAMd,U;;KAAAA,U;AAoDN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { BsGraphUp } from \"react-icons/bs\";\n// import { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Line } from \"react-chartjs-2\";\n\nconst DailyChart = function ({ daily }) {\n    console.log(daily);\n    const [chartData, setChartData] = useState({\n        labels: [\n            `${daily[0][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[4][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[8][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[12][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[16][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[20][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n        ],\n        datasets: [\n            {\n                label: \"Temperature graph\",\n                data: [32, 45, 12, 75, 69],\n                background: [\"rgba(75,192,192,0.6)\"],\n                borderWidth: 4,\n                yAxisID: \"y-axis-1\",\n            },\n        ],\n    });\n\n    const options = {\n        responsive: true,\n        scales: {\n            yAxes: [\n                {\n                    type: \"linear\",\n                    display: true,\n                    position: \"left\",\n                    id: \"y-axis-1\",\n                },\n                {\n                    type: \"linear\",\n                    display: true,\n                    position: \"right\",\n                    id: \"y-axis-2\",\n                    gridLines: {\n                        drawOnArea: false,\n                    },\n                },\n            ],\n        },\n    };\n    return (\n        <>\n            {\" \"}\n            <Line data={chartData} options={options} />\n        </>\n    );\n};\n\nexport default DailyChart;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport { getFavourites, postFavourite, deleteFavourite } from \"../services/FavouriteService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherContainer = () => {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [favourites, setFavourites] = useState([]);\n  useEffect(() => {\n    if (selectedCity != null) {\n      getCities(selectedCity);\n    }\n  }, [selectedCity]); // useEffect(() => {\n  //     if (favourites != []) {\n  //         setFavourites(favourites);\n  //     }\n  // }, [favourites]);\n  // const setFavourites = function (favourites){\n  //     // api call\n  //     postFavourite(favourites)\n  // }\n\n  useEffect(() => {\n    getFavouriteCities(favourites);\n  }, [favourites]);\n\n  const getFavouriteCities = function (favourites) {\n    console.log(favourites);\n    let favouiteFetch = favourites.map(eachCity => {\n      return fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${eachCity.name}&appid=3031aac4ff517ddfc83b94a403d374b0`);\n    });\n    Promise.all().then(res => {\n      console.log(res);\n      return Promise.all(res.map(function (res) {\n        return res.json();\n      }));\n    }).then(result => console.log(result));\n  };\n\n  const getCities = function (selectedCity) {\n    const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n    const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n    Promise.all([fetch(cityApi), fetch(forecastApi)]).then(res => {\n      return Promise.all(res.map(function (res) {\n        return res.json();\n      }));\n    }).then(result => setCities([...cities, {\n      daily: result[0],\n      forecast: result[1]\n    }]));\n  };\n\n  const onCitySubmit = function (city) {\n    console.log(city);\n    setSelectedCity(city);\n  };\n\n  const onClick = function (favourite) {\n    setFavourites([...favourites, favourite]);\n    console.log(favourites);\n  };\n\n  const getFavourite = () => {\n    getFavourites().then(result => setFavourites([result])); //setFavourites([...favourites, result]);\n  };\n\n  const addFavourite = favouriteCity => {\n    // const temp = favourites.map(favourite => favourite);\n    // temp.push(favourite);\n    // setSelectedCity(temp);\n    console.log(favouriteCity);\n    postFavourite(favouriteCity).then(() => getFavourite());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      cities: cities,\n      onCitySubmit: onCitySubmit,\n      onClick: onClick,\n      addFavourite: addFavourite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), selectedCity != null ? /*#__PURE__*/_jsxDEV(City, {\n      cities: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherContainer, \"SDf9vtx/zk6D3aOXROJyhIGGSMQ=\");\n\n_c = WeatherContainer;\nexport default WeatherContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherContainer\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js"],"names":["React","useState","useEffect","City","SearchForm","getFavourites","postFavourite","deleteFavourite","WeatherContainer","cities","setCities","selectedCity","setSelectedCity","favourites","setFavourites","getCities","getFavouriteCities","console","log","favouiteFetch","map","eachCity","fetch","name","Promise","all","then","res","json","result","cityApi","forecastApi","daily","forecast","onCitySubmit","city","onClick","favourite","getFavourite","addFavourite","favouriteCity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,eAHJ,QAIO,8BAJP;;;AAMA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,YAAY,IAAI,IAApB,EAA0B;AACtBI,MAAAA,SAAS,CAACJ,YAAD,CAAT;AACH;AACJ,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT,CAL2B,CAW3B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,kBAAkB,CAACH,UAAD,CAAlB;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMG,kBAAkB,GAAG,UAAUH,UAAV,EAAsB;AAC7CI,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,QAAIM,aAAa,GAAeN,UAAU,CAACO,GAAX,CAAgBC,QAAD,IAAc;AACzD,aAAOC,KAAK,CACP,4DAA2DD,QAAQ,CAACE,IAAK,yCADlE,CAAZ;AAGH,KAJ+B,CAAhC;AAMAC,IAAAA,OAAO,CAACC,GAAR,GAGKC,IAHL,CAGWC,GAAD,IAAS;AACXV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACA,aAAOH,OAAO,CAACC,GAAR,CACHE,GAAG,CAACP,GAAJ,CAAQ,UAAUO,GAAV,EAAe;AACnB,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAFD,CADG,CAAP;AAKH,KAVL,EAWKF,IAXL,CAWWG,MAAD,IAAYZ,OAAO,CAACC,GAAR,CAAYW,MAAZ,CAXtB;AAYH,GApBD;;AAsBA,QAAMd,SAAS,GAAG,UAAUJ,YAAV,EAAwB;AACtC,UAAMmB,OAAO,GAAI,4DAA2DnB,YAAa,yCAAzF;AACA,UAAMoB,WAAW,GAAI,qDAAoDpB,YAAa,yCAAtF;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACH,KAAK,CAACQ,OAAD,CAAN,EAAiBR,KAAK,CAACS,WAAD,CAAtB,CAAZ,EACKL,IADL,CACWC,GAAD,IAAS;AACX,aAAOH,OAAO,CAACC,GAAR,CACHE,GAAG,CAACP,GAAJ,CAAQ,UAAUO,GAAV,EAAe;AACnB,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAFD,CADG,CAAP;AAKH,KAPL,EAQKF,IARL,CAQWG,MAAD,IACFnB,SAAS,CAAC,CACN,GAAGD,MADG,EAEN;AAAEuB,MAAAA,KAAK,EAAEH,MAAM,CAAC,CAAD,CAAf;AAAoBI,MAAAA,QAAQ,EAAEJ,MAAM,CAAC,CAAD;AAApC,KAFM,CAAD,CATjB;AAcH,GAjBD;;AAmBA,QAAMK,YAAY,GAAG,UAAUC,IAAV,EAAgB;AACjClB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAZ;AACAvB,IAAAA,eAAe,CAACuB,IAAD,CAAf;AACH,GAHD;;AAKA,QAAMC,OAAO,GAAG,UAAUC,SAAV,EAAqB;AACjCvB,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBwB,SAAhB,CAAD,CAAb;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACH,GAHD;;AAKA,QAAMyB,YAAY,GAAG,MAAM;AACvBjC,IAAAA,aAAa,GAAGqB,IAAhB,CAAsBG,MAAD,IAAYf,aAAa,CAAC,CAACe,MAAD,CAAD,CAA9C,EADuB,CAGvB;AACH,GAJD;;AAMA,QAAMU,YAAY,GAAIC,aAAD,IAAmB;AACpC;AACA;AACA;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,aAAZ;AACAlC,IAAAA,aAAa,CAACkC,aAAD,CAAb,CAA6Bd,IAA7B,CAAkC,MAAMY,YAAY,EAApD;AACH,GAND;;AAQA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,MAAM,EAAE7B,MADZ;AAEI,MAAA,YAAY,EAAEyB,YAFlB;AAGI,MAAA,OAAO,EAAEE,OAHb;AAII,MAAA,YAAY,EAAEG;AAJlB;AAAA;AAAA;AAAA;AAAA,YADJ,EAOK5B,YAAY,IAAI,IAAhB,gBAAuB,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAAvB,GAAkD,IAPvD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAvGD;;GAAMD,gB;;KAAAA,gB;AAyGN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport {\n    getFavourites,\n    postFavourite,\n    deleteFavourite,\n} from \"../services/FavouriteService\";\n\nconst WeatherContainer = () => {\n    const [cities, setCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState(null);\n    const [favourites, setFavourites] = useState([]);\n\n    useEffect(() => {\n        if (selectedCity != null) {\n            getCities(selectedCity);\n        }\n    }, [selectedCity]);\n\n    // useEffect(() => {\n    //     if (favourites != []) {\n    //         setFavourites(favourites);\n    //     }\n    // }, [favourites]);\n\n    // const setFavourites = function (favourites){\n    //     // api call\n    //     postFavourite(favourites)\n\n    // }\n\n    useEffect(() => {\n        getFavouriteCities(favourites);\n    }, [favourites]);\n\n    const getFavouriteCities = function (favourites) {\n        console.log(favourites);\n        let favouiteFetch =             favourites.map((eachCity) => {\n            return fetch(\n                `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${eachCity.name}&appid=3031aac4ff517ddfc83b94a403d374b0`\n            );\n        })\n\n        Promise.all(\n\n        )\n            .then((res) => {\n                console.log(res);\n                return Promise.all(\n                    res.map(function (res) {\n                        return res.json();\n                    })\n                );\n            })\n            .then((result) => console.log(result));\n    };\n\n    const getCities = function (selectedCity) {\n        const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n        const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n        Promise.all([fetch(cityApi), fetch(forecastApi)])\n            .then((res) => {\n                return Promise.all(\n                    res.map(function (res) {\n                        return res.json();\n                    })\n                );\n            })\n            .then((result) =>\n                setCities([\n                    ...cities,\n                    { daily: result[0], forecast: result[1] },\n                ])\n            );\n    };\n\n    const onCitySubmit = function (city) {\n        console.log(city);\n        setSelectedCity(city);\n    };\n\n    const onClick = function (favourite) {\n        setFavourites([...favourites, favourite]);\n        console.log(favourites);\n    };\n\n    const getFavourite = () => {\n        getFavourites().then((result) => setFavourites([result]));\n\n        //setFavourites([...favourites, result]);\n    };\n\n    const addFavourite = (favouriteCity) => {\n        // const temp = favourites.map(favourite => favourite);\n        // temp.push(favourite);\n        // setSelectedCity(temp);\n        console.log(favouriteCity);\n        postFavourite(favouriteCity).then(() => getFavourite());\n    };\n\n    return (\n        <div>\n            <SearchForm\n                cities={cities}\n                onCitySubmit={onCitySubmit}\n                onClick={onClick}\n                addFavourite={addFavourite}\n            />\n            {selectedCity != null ? <City cities={cities} /> : null}\n        </div>\n    );\n};\n\nexport default WeatherContainer;\n"]},"metadata":{},"sourceType":"module"}
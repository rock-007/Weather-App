{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeekForecast.js\";\nimport WeekForecastDay from \"./WeekForecastDay\";\nimport \"./WeekForecast.css\";\nimport \"./City.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeekForecast = ({\n  weekForecast\n}) => {\n  console.log(weekForecast);\n\n  if (weekForecast.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  const longForecast = weekForecast.splice(0, 7);\n  console.log(weekForecast);\n  const week = longForecast.map((eachDay, index) =>\n  /*#__PURE__*/\n  // <div className=\"city-card\">\n  _jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"day-forecast\",\n      children: /*#__PURE__*/_jsxDEV(WeekForecastDay, {\n        main: eachDay.main,\n        eachday: eachDay,\n        visibility: eachDay.visibility,\n        wind: eachDay.wind,\n        day: index,\n        clouds: eachDay.clouds,\n        rain: eachDay.rain\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) // </div>\n  );\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: week\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_c = WeekForecast;\nexport default WeekForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekForecast\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeekForecast.js"],"names":["WeekForecastDay","WeekForecast","weekForecast","console","log","length","longForecast","splice","week","map","eachDay","index","main","visibility","wind","clouds","rain"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAO,oBAAP;AACA,OAAO,YAAP;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAEA,MAAIA,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,QAAMC,YAAY,GAAGJ,YAAY,CAACK,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAArB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAEA,QAAMM,IAAI,GAAGF,YAAY,CAACG,GAAb,CAAiB,CAACC,OAAD,EAAUC,KAAV;AAAA;AAC1B;AACA;AAAA,eACK,GADL,eAEI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACI,QAAC,eAAD;AACI,QAAA,IAAI,EAAED,OAAO,CAACE,IADlB;AAEI,QAAA,OAAO,EAAEF,OAFb;AAGI,QAAA,UAAU,EAAEA,OAAO,CAACG,UAHxB;AAII,QAAA,IAAI,EAAEH,OAAO,CAACI,IAJlB;AAKI,QAAA,GAAG,EAAEH,KALT;AAMI,QAAA,MAAM,EAAED,OAAO,CAACK,MANpB;AAOI,QAAA,IAAI,EAAEL,OAAO,CAACM;AAPlB,SAQSL,KART;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBAF0B,CAiB1B;AAjBS,GAAb;AAoBA,sBAAO;AAAA,cAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA9BD;;KAAMP,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import WeekForecastDay from \"./WeekForecastDay\";\nimport \"./WeekForecast.css\";\nimport \"./City.css\";\n\nconst WeekForecast = ({ weekForecast }) => {\n    console.log(weekForecast);\n\n    if (weekForecast.length === 0) {\n        return <p>Loading</p>;\n    }\n    const longForecast = weekForecast.splice(0, 7);\n    console.log(weekForecast);\n\n    const week = longForecast.map((eachDay, index) => (\n        // <div className=\"city-card\">\n        <>\n            {\" \"}\n            <div id=\"day-forecast\">\n                <WeekForecastDay\n                    main={eachDay.main}\n                    eachday={eachDay}\n                    visibility={eachDay.visibility}\n                    wind={eachDay.wind}\n                    day={index}\n                    clouds={eachDay.clouds}\n                    rain={eachDay.rain}\n                    key={index}\n                />\n            </div>\n        </>\n        // </div>\n    ));\n\n    return <ul>{week}</ul>;\n};\n\nexport default WeekForecast;\n"]},"metadata":{},"sourceType":"module"}
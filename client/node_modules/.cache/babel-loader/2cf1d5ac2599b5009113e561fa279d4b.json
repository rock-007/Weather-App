{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/City.js\";\nimport DailyForecast from \"./DailyForecast\";\nimport WeeklyForecast from \"./WeeklyForecast\";\nimport './City.css'; //const city = {daily:null, forcast:null}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst City = ({\n  cities\n}) => {\n  // const eachCity = cities.map((city, index) => {\n  //     console.log(city);\n  //     return <DailyForcast city={city.daily} key={index} />;\n  // });\n  const cityforecast = cities.map(city => {\n    // console.log(city);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"city-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"city-name\",\n        children: city.daily.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), city.forecast.list.map((eachDay, index) => /*#__PURE__*/_jsxDEV(WeeklyForecast, {\n        main: eachDay.main,\n        eachday: eachDay,\n        visibility: eachDay.visibility,\n        wind: eachDay.wind,\n        day: index,\n        clouds: eachDay[\"clouds\"],\n        rain: eachDay.rain\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 47\n      }, this)).splice(0, 7)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: cityforecast\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_c = City;\nexport default City;\n\nvar _c;\n\n$RefreshReg$(_c, \"City\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/City.js"],"names":["DailyForecast","WeeklyForecast","City","cities","cityforecast","map","city","daily","name","forecast","list","eachDay","index","main","visibility","wind","rain","splice"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,YAAP,C,CACA;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACvB;AACA;AACA;AACA;AACA,QAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AACtC;AAEA,wBACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACI;AAAI,QAAA,EAAE,EAAC,WAAP;AAAA,kBAAoBA,IAAI,CAACC,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIKF,IAAI,CAACG,QAAL,CAAcC,IAAd,CACIL,GADJ,CACQ,CAACM,OAAD,EAAUC,KAAV,kBAAqB,QAAC,cAAD;AACtB,QAAA,IAAI,EAAED,OAAO,CAACE,IADQ;AAEtB,QAAA,OAAO,EAAEF,OAFa;AAGtB,QAAA,UAAU,EAAEA,OAAO,CAACG,UAHE;AAItB,QAAA,IAAI,EAAEH,OAAO,CAACI,IAJQ;AAKtB,QAAA,GAAG,EAAEH,KALiB;AAMtB,QAAA,MAAM,EAAED,OAAO,CAAC,QAAD,CANO;AAOtB,QAAA,IAAI,EAAEA,OAAO,CAACK;AAPQ,SAQjBJ,KARiB;AAAA;AAAA;AAAA;AAAA,cAD7B,EAYIK,MAZJ,CAYW,CAZX,EAYc,CAZd,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH,GAvBoB,CAArB;AAwBA,sBACQ;AAAA,cAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,UADR;AAGH,CAhCD;;KAAMF,I;AAkCN,eAAeA,IAAf","sourcesContent":["import DailyForecast from \"./DailyForecast\";\nimport WeeklyForecast from \"./WeeklyForecast\";\nimport './City.css';\n//const city = {daily:null, forcast:null}\n\nconst City = ({cities}) => {\n    // const eachCity = cities.map((city, index) => {\n    //     console.log(city);\n    //     return <DailyForcast city={city.daily} key={index} />;\n    // });\n    const cityforecast = cities.map((city) => {\n        // console.log(city);\n\n        return (\n            <div class=\"city-card\">\n                <h3 id=\"city-name\">{city.daily.name}</h3>\n                <div></div>\n                \n                {city.forecast.list\n                    .map((eachDay, index) => (<WeeklyForecast\n                        main={eachDay.main}\n                        eachday={eachDay}\n                        visibility={eachDay.visibility}\n                        wind={eachDay.wind}\n                        day={index}\n                        clouds={eachDay[\"clouds\"]}\n                        rain={eachDay.rain}\n                        key={index}\n                    />\n                    ))\n                    .splice(0, 7)}\n            </div>\n        );\n    });\n    return (\n            <ul>{cityforecast}</ul>\n    );\n};\n\nexport default City;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport DisplayFavouite from \"../Components/DisplayFavouite\";\nimport { getFavourites, postFavourite, deleteFavourite } from \"../services/FavouriteService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherContainer = () => {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [favourites, setFavourites] = useState(null);\n  const [displayFavourites, setDisplayFavourites] = useState(null);\n  useEffect(() => {\n    if (selectedCity != null) {\n      getCities(selectedCity);\n    }\n  }, [selectedCity]);\n  useEffect(() => {\n    getFavourite();\n  }, []);\n  useEffect(() => {\n    if (favourites !== null) {\n      getFavouriteCities(favourites);\n    }\n  }, [favourites]);\n\n  const getFavouriteCities = function (favourites) {\n    console.log(favourites[0][0][\"name\"]);\n    let favouiteFetch = favourites[0].map(eachCity => {\n      return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${eachCity[\"name\"]}&appid=3031aac4ff517ddfc83b94a403d374b0`);\n    });\n    console.log(favouiteFetch);\n    Promise.all(favouiteFetch).then(res => {\n      console.log(res);\n      return Promise.all(res.map(function (res) {\n        return res.json();\n      }));\n    }).then(result => setDisplayFavourites(result));\n  };\n\n  const getCities = function (selectedCity) {\n    const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n    const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n    Promise.all([fetch(cityApi), fetch(forecastApi)]).then(res => {\n      return Promise.all(res.map(function (res) {\n        return res.json();\n      }));\n    }).then(result => setCities([...cities, {\n      daily: result[0],\n      forecast: result[1]\n    }]));\n  };\n\n  const onCitySubmit = function (city) {\n    console.log(city);\n    setSelectedCity(city);\n  };\n\n  const onClick = function (favourite) {\n    setFavourites([...favourites, favourite]);\n    console.log(favourites);\n  };\n\n  const getFavourite = () => {\n    getFavourites().then(result => setFavourites([result])); //setFavourites([...favourites, result]);\n  };\n\n  const addFavourite = favouriteCity => {\n    // const temp = favourites.map(favourite => favourite);\n    // temp.push(favourite);\n    // setSelectedCity(temp);\n    console.log(favouriteCity);\n    postFavourite(favouriteCity).then(() => getFavourite());\n  };\n\n  const deleteFav = city => {\n    console.log(city); // delete and rerender\n\n    deleteFavourite(city).then(() => {\n      setFavourites(favourites.filter(eachCity => eachCity != city));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      cities: cities,\n      onCitySubmit: onCitySubmit,\n      onClick: onClick,\n      addFavourite: addFavourite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), displayFavourites != null ? /*#__PURE__*/_jsxDEV(DisplayFavouite, {\n      displayFavourites1: displayFavourites,\n      deleteFavourite2: deleteFav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : null, selectedCity != null ? /*#__PURE__*/_jsxDEV(City, {\n      cities: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 31\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherContainer, \"m69ktEUO97h/VD1/WDAPsB2t4Xw=\");\n\n_c = WeatherContainer;\nexport default WeatherContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherContainer\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js"],"names":["React","useState","useEffect","City","SearchForm","DisplayFavouite","getFavourites","postFavourite","deleteFavourite","WeatherContainer","cities","setCities","selectedCity","setSelectedCity","favourites","setFavourites","displayFavourites","setDisplayFavourites","getCities","getFavourite","getFavouriteCities","console","log","favouiteFetch","map","eachCity","fetch","Promise","all","then","res","json","result","cityApi","forecastApi","daily","forecast","onCitySubmit","city","onClick","favourite","addFavourite","favouriteCity","deleteFav","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport DisplayFavouite from \"../Components/DisplayFavouite\";\nimport {\n  getFavourites,\n  postFavourite,\n  deleteFavourite,\n} from \"../services/FavouriteService\";\n\nconst WeatherContainer = () => {\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [favourites, setFavourites] = useState(null);\n  const [displayFavourites, setDisplayFavourites] = useState(null);\n\n  useEffect(() => {\n    if (selectedCity != null) {\n      getCities(selectedCity);\n    }\n  }, [selectedCity]);\n\n  useEffect(() => {\n    getFavourite();\n  }, []);\n\n  useEffect(() => {\n    if (favourites !== null) {\n      getFavouriteCities(favourites);\n    }\n  }, [favourites]);\n\n  const getFavouriteCities = function (favourites) {\n    console.log(favourites[0][0][\"name\"]);\n    let favouiteFetch = favourites[0].map((eachCity) => {\n      return fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${eachCity[\"name\"]}&appid=3031aac4ff517ddfc83b94a403d374b0`\n      );\n    });\n    console.log(favouiteFetch);\n\n    Promise.all(favouiteFetch)\n      .then((res) => {\n        console.log(res);\n        return Promise.all(\n          res.map(function (res) {\n            return res.json();\n          })\n        );\n      })\n      .then((result) => setDisplayFavourites(result));\n  };\n\n  const getCities = function (selectedCity) {\n    const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n    const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n    Promise.all([fetch(cityApi), fetch(forecastApi)])\n      .then((res) => {\n        return Promise.all(\n          res.map(function (res) {\n            return res.json();\n          })\n        );\n      })\n      .then((result) =>\n        setCities([...cities, { daily: result[0], forecast: result[1] }])\n      );\n  };\n\n  const onCitySubmit = function (city) {\n    console.log(city);\n    setSelectedCity(city);\n  };\n\n  const onClick = function (favourite) {\n    setFavourites([...favourites, favourite]);\n    console.log(favourites);\n  };\n\n  const getFavourite = () => {\n    getFavourites().then((result) => setFavourites([result]));\n\n    //setFavourites([...favourites, result]);\n  };\n\n  const addFavourite = (favouriteCity) => {\n    // const temp = favourites.map(favourite => favourite);\n    // temp.push(favourite);\n    // setSelectedCity(temp);\n    console.log(favouriteCity);\n    postFavourite(favouriteCity).then(() => getFavourite());\n  };\n  const deleteFav = (city) => {\n    console.log(city);\n    // delete and rerender\n    deleteFavourite(city).then(() => {\n      setFavourites(favourites.filter((eachCity) => eachCity != city));\n    });\n  };\n\n  return (\n    <div>\n      <SearchForm\n        cities={cities}\n        onCitySubmit={onCitySubmit}\n        onClick={onClick}\n        addFavourite={addFavourite}\n      />\n      {displayFavourites != null ? (\n        <DisplayFavouite\n          displayFavourites1={displayFavourites}\n          deleteFavourite2={deleteFav}\n        />\n      ) : null}\n      {selectedCity != null ? <City cities={cities} /> : null}\n    </div>\n  );\n};\n\nexport default WeatherContainer;\n"]},"metadata":{},"sourceType":"module"}
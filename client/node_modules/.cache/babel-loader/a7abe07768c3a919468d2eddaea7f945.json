{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/UkMap.js\",\n    _s = $RefreshSig$();\n\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UkMap = ({\n  cities\n}) => {\n  _s();\n\n  const libraries = [\"places\"];\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.React_APP_Google_MAPS_API_KEY,\n    libraries\n  });\n  console.log(isLoaded);\n  useEffect(() => {\n    mapFunction();\n  }, []);\n  const options = {};\n\n  const mapFunction = (lat1 = 53.472225, lng1 = -2.293502, zoom1 = 8) => {\n    console.log(\"33\");\n    let center = {\n      lat: lat1,\n      lng: lng1\n    };\n    const containerStyle = {\n      position: \"static\",\n      margin: \"34px\",\n      width: \"60vw\",\n      height: \"60vh\"\n    };\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      zoom: zoom1,\n      center: center,\n      options: options // onClick={handleMap}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  };\n\n  let result = cities.map(eachCity => {\n    console.log(\"city\", eachCity[\"forecast\"][\"city\"][\"coord\"][\"lon\"]);\n    const lat1 = eachCity[\"forecast\"][\"city\"][\"coord\"][\"lat\"];\n    const lng1 = eachCity[\"forecast\"][\"city\"][\"coord\"][\"lon\"];\n    const zoom1 = 14;\n    return mapFunction(lat1, lng1, zoom1);\n  });\n  const defaultMap = mapFunction();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      children: isLoaded == true ? cities != [] ? mapFunction(1, 1, 1) : mapFunction(5, 5, 5) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UkMap, \"eEuGuwq7VeZd0IJXXfL51YY3+Zk=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = UkMap;\nexport default UkMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"UkMap\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/UkMap.js"],"names":["GoogleMap","useLoadScript","Marker","InfoWindow","React","useState","useEffect","UkMap","cities","libraries","isLoaded","loadError","googleMapsApiKey","process","env","React_APP_Google_MAPS_API_KEY","console","log","mapFunction","options","lat1","lng1","zoom1","center","lat","lng","containerStyle","position","margin","width","height","result","map","eachCity","defaultMap"],"mappings":";;;AAAA,SACIA,SADJ,EAEIC,aAFJ,EAGIC,MAHJ,EAIIC,UAJJ,QAKO,wBALP;AAMA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC1B,QAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BV,aAAa,CAAC;AAC1CW,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADY;AAE1CN,IAAAA;AAF0C,GAAD,CAA7C;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMC,OAAO,GAAG,EAAhB;;AACA,QAAMD,WAAW,GAAG,CAACE,IAAI,GAAG,SAAR,EAAmBC,IAAI,GAAG,CAAC,QAA3B,EAAqCC,KAAK,GAAG,CAA7C,KAAmD;AACnEN,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,QAAIM,MAAM,GAAG;AACTC,MAAAA,GAAG,EAAEJ,IADI;AAETK,MAAAA,GAAG,EAAEJ;AAFI,KAAb;AAKA,UAAMK,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE,QADS;AAEnBC,MAAAA,MAAM,EAAE,MAFW;AAGnBC,MAAAA,KAAK,EAAE,MAHY;AAInBC,MAAAA,MAAM,EAAE;AAJW,KAAvB;AAOA,wBACI,QAAC,SAAD;AACI,MAAA,iBAAiB,EAAEJ,cADvB;AAEI,MAAA,IAAI,EAAEJ,KAFV;AAGI,MAAA,MAAM,EAAEC,MAHZ;AAII,MAAA,OAAO,EAAEJ,OAJb,CAKI;;AALJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAvBD;;AAwBA,MAAIY,MAAM,GAAGvB,MAAM,CAACwB,GAAP,CAAYC,QAAD,IAAc;AAClCjB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBgB,QAAQ,CAAC,UAAD,CAAR,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,KAAtC,CAApB;AACA,UAAMb,IAAI,GAAGa,QAAQ,CAAC,UAAD,CAAR,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,KAAtC,CAAb;AACA,UAAMZ,IAAI,GAAGY,QAAQ,CAAC,UAAD,CAAR,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,KAAtC,CAAb;AACA,UAAMX,KAAK,GAAG,EAAd;AAEA,WAAOJ,WAAW,CAACE,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAAlB;AACH,GAPY,CAAb;AASA,QAAMY,UAAU,GAAGhB,WAAW,EAA9B;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA,gBACKR,QAAQ,IAAI,IAAZ,GACKF,MAAM,IAAI,EAAV,GACIU,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADf,GAEIA,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHpB,GAIK;AALV;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH,CA3DD;;GAAMX,K;UAG8BN,a;;;KAH9BM,K;AA6DN,eAAeA,KAAf","sourcesContent":["import {\n    GoogleMap,\n    useLoadScript,\n    Marker,\n    InfoWindow,\n} from \"@react-google-maps/api\";\nimport React, { useState, useEffect } from \"react\";\n\nconst UkMap = ({ cities }) => {\n    const libraries = [\"places\"];\n\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.React_APP_Google_MAPS_API_KEY,\n        libraries,\n    });\n    console.log(isLoaded);\n\n    useEffect(() => {\n        mapFunction();\n    }, []);\n    const options = {};\n    const mapFunction = (lat1 = 53.472225, lng1 = -2.293502, zoom1 = 8) => {\n        console.log(\"33\");\n        let center = {\n            lat: lat1,\n            lng: lng1,\n        };\n\n        const containerStyle = {\n            position: \"static\",\n            margin: \"34px\",\n            width: \"60vw\",\n            height: \"60vh\",\n        };\n\n        return (\n            <GoogleMap\n                mapContainerStyle={containerStyle}\n                zoom={zoom1}\n                center={center}\n                options={options}\n                // onClick={handleMap}\n            />\n        );\n    };\n    let result = cities.map((eachCity) => {\n        console.log(\"city\", eachCity[\"forecast\"][\"city\"][\"coord\"][\"lon\"]);\n        const lat1 = eachCity[\"forecast\"][\"city\"][\"coord\"][\"lat\"];\n        const lng1 = eachCity[\"forecast\"][\"city\"][\"coord\"][\"lon\"];\n        const zoom1 = 14;\n\n        return mapFunction(lat1, lng1, zoom1);\n    });\n\n    const defaultMap = mapFunction();\n\n    return (\n        <>\n            <div id=\"map\">\n                {isLoaded == true\n                    ? cities != []\n                        ? mapFunction(1, 1, 1)\n                        : mapFunction(5, 5, 5)\n                    : null}\n            </div>\n        </>\n    );\n};\n\nexport default UkMap;\n"]},"metadata":{},"sourceType":"module"}
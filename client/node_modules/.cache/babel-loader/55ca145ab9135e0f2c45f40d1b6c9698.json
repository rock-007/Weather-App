{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport { getFavourites, postFavourite, deleteFavourite } from \"../services/FavouriteService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherContainer = () => {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [favourites, setFavourites] = useState([]);\n  useEffect(() => {\n    if (selectedCity != null) {\n      getCities(selectedCity);\n    }\n  }, [selectedCity]); // useEffect(() => {\n  //     if (favourites != []) {\n  //         setFavourites(favourites);\n  //     }\n  // }, [favourites]);\n  // const setFavourites = function (favourites){\n  //     // api call\n  //     postFavourite(favourites)\n  // }\n\n  const getCities = function (selectedCity) {\n    const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n    const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n    Promise.all([fetch(cityApi), fetch(forecastApi)]).then(res => {\n      return Promise.all(res.map(function (res) {\n        return res.json();\n      }));\n    }).then(result => setCities([...cities, {\n      daily: result[0],\n      forecast: result[1]\n    }]));\n  };\n\n  const onCitySubmit = function (city) {\n    console.log(city);\n    setSelectedCity(city);\n  };\n\n  const onClick = function (favourite) {\n    setFavourites([...favourites, favourite]);\n    console.log(favourites);\n  };\n\n  const addFavourite = favourite => {\n    // const temp = favourites.map(favourite => favourite);\n    // temp.push(favourite);\n    // setSelectedCity(temp);\n    console.log(favourite);\n    const result = postFavourite(favourites);\n    setFavourites([...favourites, result]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      cities: cities,\n      onCitySubmit: onCitySubmit,\n      onClick: onClick,\n      addFavourite: addFavourite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), selectedCity != null ? /*#__PURE__*/_jsxDEV(City, {\n      cities: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherContainer, \"z8mc6tXqv/KYIq5Dj+otFY/LE/8=\");\n\n_c = WeatherContainer;\nexport default WeatherContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherContainer\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js"],"names":["React","useState","useEffect","City","SearchForm","getFavourites","postFavourite","deleteFavourite","WeatherContainer","cities","setCities","selectedCity","setSelectedCity","favourites","setFavourites","getCities","cityApi","forecastApi","Promise","all","fetch","then","res","map","json","result","daily","forecast","onCitySubmit","city","console","log","onClick","favourite","addFavourite"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,eAAtC,QAA4D,8BAA5D;;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,YAAY,IAAI,IAApB,EAA0B;AACtBI,MAAAA,SAAS,CAACJ,YAAD,CAAT;AACH;AACJ,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT,CAL2B,CAW3B;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;;AAEA,QAAMI,SAAS,GAAG,UAAUJ,YAAV,EAAwB;AACtC,UAAMK,OAAO,GAAI,4DAA2DL,YAAa,yCAAzF;AACA,UAAMM,WAAW,GAAI,qDAAoDN,YAAa,yCAAtF;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,KAAK,CAACJ,OAAD,CAAN,EAAiBI,KAAK,CAACH,WAAD,CAAtB,CAAZ,EACKI,IADL,CACWC,GAAD,IAAS;AACX,aAAOJ,OAAO,CAACC,GAAR,CACHG,GAAG,CAACC,GAAJ,CAAQ,UAAUD,GAAV,EAAe;AACnB,eAAOA,GAAG,CAACE,IAAJ,EAAP;AACH,OAFD,CADG,CAAP;AAKH,KAPL,EAQKH,IARL,CAQWI,MAAD,IACFf,SAAS,CAAC,CACN,GAAGD,MADG,EAEN;AAAEiB,MAAAA,KAAK,EAAED,MAAM,CAAC,CAAD,CAAf;AAAoBE,MAAAA,QAAQ,EAAEF,MAAM,CAAC,CAAD;AAApC,KAFM,CAAD,CATjB;AAcH,GAjBD;;AAmBA,QAAMG,YAAY,GAAG,UAAUC,IAAV,EAAgB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAjB,IAAAA,eAAe,CAACiB,IAAD,CAAf;AACH,GAHD;;AAKA,QAAMG,OAAO,GAAG,UAAUC,SAAV,EAAqB;AACjCnB,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBoB,SAAhB,CAAD,CAAb;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYlB,UAAZ;AACH,GAHD;;AAMA,QAAMqB,YAAY,GAAID,SAAD,IAAe;AAChC;AACA;AACA;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACA,UAAMR,MAAM,GAAGnB,aAAa,CAACO,UAAD,CAA5B;AAGAC,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBY,MAAhB,CAAD,CAAb;AAEH,GAVD;;AAYA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEhB,MAApB;AAA4B,MAAA,YAAY,EAAEmB,YAA1C;AAAwD,MAAA,OAAO,EAAEI,OAAjE;AAA0E,MAAA,YAAY,EAAEE;AAAxF;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKvB,YAAY,IAAI,IAAhB,gBAAuB,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAAvB,GAAkD,IAFvD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAzED;;GAAMD,gB;;KAAAA,gB;AA2EN,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport {getFavourites, postFavourite, deleteFavourite} from \"../services/FavouriteService\";\n\n\nconst WeatherContainer = () => {\n    const [cities, setCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState(null);\n    const [favourites, setFavourites] = useState([])\n\n    useEffect(() => {\n        if (selectedCity != null) {\n            getCities(selectedCity);\n        }\n    }, [selectedCity]);\n\n    // useEffect(() => {\n    //     if (favourites != []) {\n    //         setFavourites(favourites);\n    //     }\n    // }, [favourites]);\n\n\n\n    // const setFavourites = function (favourites){\n    //     // api call\n    //     postFavourite(favourites)\n\n    // }\n\n    const getCities = function (selectedCity) {\n        const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n        const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n        Promise.all([fetch(cityApi), fetch(forecastApi)])\n            .then((res) => {\n                return Promise.all(\n                    res.map(function (res) {\n                        return res.json();\n                    })\n                );\n            })\n            .then((result) =>\n                setCities([\n                    ...cities,\n                    { daily: result[0], forecast: result[1] },\n                ])\n            );\n    };\n\n    const onCitySubmit = function (city) {\n        console.log(city);\n        setSelectedCity(city);\n    };\n\n    const onClick = function (favourite) {\n        setFavourites([...favourites, favourite])\n        console.log(favourites)\n    }\n\n\n    const addFavourite = (favourite) => {\n        // const temp = favourites.map(favourite => favourite);\n        // temp.push(favourite);\n        // setSelectedCity(temp);\n        console.log(favourite)\n        const result = postFavourite(favourites)\n\n\n        setFavourites([...favourites, result])\n        \n    };\n\n    return (\n        <div>\n            <SearchForm cities={cities} onCitySubmit={onCitySubmit} onClick={onClick} addFavourite={addFavourite}/>\n            {selectedCity != null ? <City cities={cities} /> : null}\n        </div>\n    );\n};\n\nexport default WeatherContainer;\n"]},"metadata":{},"sourceType":"module"}
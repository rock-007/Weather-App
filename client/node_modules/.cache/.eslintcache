[{"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/index.js":"1","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/App.js":"2","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/reportWebVitals.js":"3","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/WeatherContainer.js":"4","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/SearchForm.js":"5","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/City.js":"6","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/DailyChart.js":"7"},{"size":501,"mtime":1621784243546,"results":"8","hashOfConfig":"9"},{"size":172,"mtime":1621867228513,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1621592549071,"results":"11","hashOfConfig":"9"},{"size":2333,"mtime":1621867228524,"results":"12","hashOfConfig":"9"},{"size":737,"mtime":1621867228514,"results":"13","hashOfConfig":"9"},{"size":1391,"mtime":1621866432066,"results":"14","hashOfConfig":"9"},{"size":3103,"mtime":1621866432068,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1efif35",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/index.js",[],["33","34"],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/App.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/reportWebVitals.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/WeatherContainer.js",["35"],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/SearchForm.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/City.js",["36"],"import DailyForecast from \"./DailyForecast\";\nimport WeeklyForecast from \"./WeeklyForecast\";\nimport \"./City.css\";\nimport DailyChart from \"../containers/DailyChart\";\n//const city = {daily:null, forcast:null}\n\nconst City = ({ cities }) => {\n    // const eachCity = cities.map((city, index) => {\n    //     console.log(city);\n    //     return <DailyForcast city={city.daily} key={index} />;\n    // });\n    const cityforecast = cities.map((city) => {\n        // console.log(city);\n\n        return (\n            <div class=\"city-card\">\n                <h3 id=\"city-name\">{city.daily.city.name}</h3>\n                <div>\n                    <DailyChart daily={city.daily.list} />\n                </div>\n\n                {city.forecast.list\n                    .map((eachDay, index) => (\n                        <WeeklyForecast\n                            main={eachDay.main}\n                            eachday={eachDay}\n                            visibility={eachDay.visibility}\n                            wind={eachDay.wind}\n                            day={index}\n                            clouds={eachDay[\"clouds\"]}\n                            rain={eachDay.rain}\n                            key={index}\n                        />\n                    ))\n                    .splice(0, 7)}\n            </div>\n        );\n    });\n    return <ul>{cityforecast}</ul>;\n};\n\nexport default City;\n","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/DailyChart.js",["37","38","39","40","41","42","43","44","45","46","47"],"import React, { useState } from \"react\";\nimport {\n    WiThermometer,\n    WiStrongWind,\n    WiDaySunny,\n    WiRain,\n    WiDayShowers,\n    WiDayCloudy,\n} from \"react-icons/wi\";\nimport { BsGraphUp } from \"react-icons/bs\";\n// import { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Line } from \"react-chartjs-2\";\n\nconst DailyChart = function ({ daily }) {\n    console.log(daily);\n    const [chartData, setChartData] = useState({\n        labels: [\n            `${daily[0][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[4][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[8][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[12][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[16][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[20][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n        ],\n        datasets: [\n            {\n                label: \"Temperature graph â„ƒ\",\n                data: [\n                    (daily[0][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[4][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[8][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[12][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[16][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[20][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                ],\n                backgroundColor: [\"rgba(75,192,192,0.6)\"],\n                borderWidth: 4,\n                // yAxisID: \"y-axis-1\",\n            },\n        ],\n    });\n\n    const options = {\n        responsive: true,\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        autoSkip: true,\n                        maxTicksLimit: 10,\n                        beginAtZero: true,\n                    },\n                    // type: \"linear\",\n                    // display: true,\n                    // position: \"left\",\n                    // id: \"y-axis-1\",\n                },\n                // ,\n                // {\n                //     type: \"linear\",\n                //     display: true,\n                //     position: \"right\",\n                //     id: \"y-axis-2\",\n                //     gridLines: {\n                //         drawOnArea: false,\n                //     },\n                // },\n            ],\n        },\n    };\n\n    const averageTemperature = (daily) => {\n        const average = daily.reduce((aver, eachHour) => {\n            return eachHour[\"main\"][\"temp\"] + aver;\n        }, 0);\n        console.log(daily.leng);\n    };\n\n    const averageWinds = (daily) => {};\n\n    const weatherIcon = (daily) => {\n        const result = averageTemperature(daily);\n    };\n\n    const windIcon = (daily) => {\n        const result = averageWinds(daily);\n    };\n    return (\n        <>\n            {\" \"}\n            <div>\n                {weatherIcon(daily)}\n                {windIcon(daily)}\n                <Line data={chartData} options={options} />\n            </div>\n        </>\n    );\n};\n\nexport default DailyChart;\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":13,"column":8,"nodeType":"54","endLine":13,"endColumn":22,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":21},{"ruleId":"56","severity":1,"message":"60","line":3,"column":5,"nodeType":"58","messageId":"59","endLine":3,"endColumn":18},{"ruleId":"56","severity":1,"message":"61","line":4,"column":5,"nodeType":"58","messageId":"59","endLine":4,"endColumn":17},{"ruleId":"56","severity":1,"message":"62","line":5,"column":5,"nodeType":"58","messageId":"59","endLine":5,"endColumn":15},{"ruleId":"56","severity":1,"message":"63","line":6,"column":5,"nodeType":"58","messageId":"59","endLine":6,"endColumn":11},{"ruleId":"56","severity":1,"message":"64","line":7,"column":5,"nodeType":"58","messageId":"59","endLine":7,"endColumn":17},{"ruleId":"56","severity":1,"message":"65","line":8,"column":5,"nodeType":"58","messageId":"59","endLine":8,"endColumn":16},{"ruleId":"56","severity":1,"message":"66","line":10,"column":10,"nodeType":"58","messageId":"59","endLine":10,"endColumn":19},{"ruleId":"56","severity":1,"message":"67","line":17,"column":23,"nodeType":"58","messageId":"59","endLine":17,"endColumn":35},{"ruleId":"56","severity":1,"message":"68","line":74,"column":15,"nodeType":"58","messageId":"59","endLine":74,"endColumn":22},{"ruleId":"56","severity":1,"message":"69","line":83,"column":15,"nodeType":"58","messageId":"59","endLine":83,"endColumn":21},{"ruleId":"56","severity":1,"message":"69","line":87,"column":15,"nodeType":"58","messageId":"59","endLine":87,"endColumn":21},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCities'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'DailyForecast' is defined but never used.","Identifier","unusedVar","'WiThermometer' is defined but never used.","'WiStrongWind' is defined but never used.","'WiDaySunny' is defined but never used.","'WiRain' is defined but never used.","'WiDayShowers' is defined but never used.","'WiDayCloudy' is defined but never used.","'BsGraphUp' is defined but never used.","'setChartData' is assigned a value but never used.","'average' is assigned a value but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [getCities, selectedCity]",{"range":"75","text":"76"},[393,407],"[getCities, selectedCity]"]
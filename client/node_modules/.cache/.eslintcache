[{"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/index.js":"1","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/App.js":"2","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/reportWebVitals.js":"3","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js":"4","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/UkMap.js":"5","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/City.js":"6","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/SearchForm.js":"7","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/MapStyles.js":"8","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/DisplayFavourite.js":"9","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/services/FavouriteService.js":"10","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeeklyForecast.js":"11","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/DailyChart.js":"12","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/FavouriteCity.js":"13"},{"size":501,"mtime":1622055831787,"results":"14","hashOfConfig":"15"},{"size":172,"mtime":1622055831780,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1621592549071,"results":"17","hashOfConfig":"15"},{"size":4351,"mtime":1622055842394,"results":"18","hashOfConfig":"15"},{"size":1914,"mtime":1622055842394,"results":"19","hashOfConfig":"15"},{"size":1352,"mtime":1622055831782,"results":"20","hashOfConfig":"15"},{"size":1650,"mtime":1622055831783,"results":"21","hashOfConfig":"15"},{"size":2801,"mtime":1622055842392,"results":"22","hashOfConfig":"15"},{"size":856,"mtime":1622055842391,"results":"23","hashOfConfig":"15"},{"size":1044,"mtime":1622145181318,"results":"24","hashOfConfig":"15"},{"size":2245,"mtime":1622055842394,"results":"25","hashOfConfig":"15"},{"size":2583,"mtime":1622055831786,"results":"26","hashOfConfig":"15"},{"size":2090,"mtime":1622055831782,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1efif35",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/index.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/App.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/reportWebVitals.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js",["58"],"import React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport DisplayFavourite from \"../Components/DisplayFavourite\";\nimport UkMap from \"./UkMap\";\nimport MapStyles from \"../Components/MapStyles\"\n\nimport {\n    getFavourites,\n    postFavourite,\n    deleteFavourite,\n} from \"../services/FavouriteService\";\nimport {GoogleMap} from \"@react-google-maps/api\";\n\nconst WeatherContainer = () => {\n    const [cities, setCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState(null);\n    const [favourites, setFavourites] = useState(null);\n    const [displayFavourites, setDisplayFavourites] = useState(null);\n\n    useEffect(() => {\n        if (selectedCity != null) {\n            getCities(selectedCity);\n        }\n    }, [selectedCity]);\n\n    useEffect(() => {\n        getFavourite();\n    }, []);\n\n    useEffect(() => {\n        if (favourites !== null) {\n            getFavouriteCities(favourites);\n        }\n    }, [favourites]);\n\n    const getFavouriteCities = function (favourites) {\n        console.log(favourites[0]);\n        let favouiteFetch = favourites[0].map((eachCity) => {\n            return fetch(\n                `http://api.openweathermap.org/data/2.5/weather?q=${eachCity[\"name\"]}&appid=3031aac4ff517ddfc83b94a403d374b0`\n            );\n        });\n        console.log(favouiteFetch);\n\n        Promise.all(favouiteFetch)\n            .then((res) => {\n                console.log(res);\n                return Promise.all(\n                    res.map(function (res) {\n                        return res.json();\n                    })\n                );\n            })\n            .then((result) => setDisplayFavourites(result));\n    };\n\n    const getCities = function (selectedCity) {\n        const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n        const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n        Promise.all([fetch(cityApi), fetch(forecastApi)])\n            .then((res) => {\n                return Promise.all(\n                    res.map(function (res) {\n                        return res.json();\n                    })\n                );\n            })\n            .then((result) =>\n                setCities([{ daily: result[0], forecast: result[1] }])\n            );\n    };\n\n    const onCitySubmit = function (city) {\n        console.log(city);\n        setSelectedCity(city);\n    };\n\n    const onClick = function (favourite) {\n        setFavourites([...favourites, favourite]);\n        console.log(favourites);\n    };\n\n    const getFavourite = () => {\n        getFavourites().then((result) => setFavourites([result]));\n\n        //setFavourites([...favourites, result]);\n    };\n\n    const addFavourite = (favouriteCity) => {\n        // const temp = favourites.map(favourite => favourite);\n        // temp.push(favourite);\n        // setSelectedCity(temp);\n        console.log(favouriteCity);\n        postFavourite(favouriteCity).then(() => getFavourite());\n    };\n    const deleteFav = (city) => {\n        console.log(favourites[0]);\n        // delete and rerender\n\n        const result = favourites[0].filter(\n            (eachCity) => eachCity[\"name\"].toLowerCase() !== city.toLowerCase()\n        );\n        console.log(result);\n\n        deleteFavourite(city).then(() => {\n            setFavourites([result]);\n        });\n    };\n    const favForcast = (favCity) => {\n        setSelectedCity(favCity);\n    };\n    return (\n        <div>\n            <SearchForm\n                cities={cities}\n                onCitySubmit={onCitySubmit}\n                onClick={onClick}\n                addFavourite={addFavourite}\n            />\n            <div id=\"flex-grid\">\n\n            {displayFavourites != null ? (\n                <DisplayFavourite\n                    displayFavourites1={displayFavourites}\n                    deleteFavourite2={deleteFav}\n                    favouriteforcast2={favForcast}\n                />\n            ) : null}\n\n            <UkMap cities={cities} styles={MapStyles.styles}/>\n            </div>\n            \n            {selectedCity != null ? <City cities={cities} /> : null}\n        </div>\n    );\n};\n\nexport default WeatherContainer;\n","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/UkMap.js",["59","60","61","62","63","64","65"],"import {\n    GoogleMap,\n    useLoadScript,\n    Marker,\n    InfoWindow,\n} from \"@react-google-maps/api\";\nimport React, { useState, useEffect } from \"react\";\nimport MapStyles from '../Components/MapStyles';\n\nconst UkMap = ({ cities }) => {\n    const libraries = [\"places\"];\n\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.React_APP_Google_MAPS_API_KEY,\n        libraries,\n    });\n    // console.log(cities[0] === Object);\n    console.log(\"xxx\", cities);\n    useEffect(() => {\n        mapFunction();\n    }, []);\n    const options = {};\n    const mapFunction = (lat1 = 53.472225, lng1 = -2.293502, zoom1 = 6) => {\n        console.log(\"33\");\n        let center = {\n            lat: lat1,\n            lng: lng1,\n        };\n\n        const containerStyle = {\n            position: \"static\",\n            margin: \"34px\",\n            width: \"60vw\",\n            height: \"60vh\",\n            \n        };\n\n        return (\n            <GoogleMap\n                mapContainerStyle={containerStyle}\n                styles={MapStyles.styles}\n                zoom={zoom1}\n                center={center}\n                options={options}\n                // onClick={handleMap}\n            />\n        );\n    };\n    let result = cities.map((eachCity) => {\n        console.log(\"city\", eachCity[\"forecast\"][\"city\"][\"coord\"][\"lon\"]);\n        const lat1 = eachCity[\"forecast\"][\"city\"][\"coord\"][\"lat\"];\n        const lng1 = eachCity[\"forecast\"][\"city\"][\"coord\"][\"lon\"];\n        const zoom1 = 14;\n\n        return mapFunction(lat1, lng1, zoom1);\n    });\n\n    const defaultMap = mapFunction();\n\n    return (\n        <>\n            <div id=\"map\">\n                {isLoaded == true\n                    ? typeof cities[0] === \"undefined\"\n                        ? mapFunction()\n                        : result\n                    : null}\n            </div>\n        </>\n    );\n};\n\nexport default UkMap;\n","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/City.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/SearchForm.js",["66"],"import \"./SearchForm.css\";\nimport \"./NavBar.css\";\nimport { useState } from \"react\";\nimport CCBC from \"../Components/CCBC.png\";\nconst SearchForm = ({ onCitySubmit, addFavourite, onClick }) => {\n    const [search, setSearch] = useState();\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        if (search === 1) {\n            // search\n            const chosenCity = event.target.city.value.toLowerCase();\n            onCitySubmit(chosenCity);\n        } else if (search === 2) {\n            // save in DB\n            const favourite = event.target.city.value.toLowerCase();\n            addFavourite(favourite);\n        }\n        event.target.reset();\n    };\n    return (\n        <div id=\"form-wrapper\" className=\"nav-bar\">\n            <div id=\"header-left\">\n                <img id=\"image-2\" src={CCBC} alt=\"No image found\" width=\"200\" />\n                <h1 id=\"header\">Weather</h1>\n            </div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City\" />\n                <button\n                    id=\"search-button\"\n                    type=\"submit\"\n                    onClick={() => {\n                        setSearch(1);\n                    }}\n                >\n                    Search\n                </button>\n                     \n                <input\n                    onClick={() => {\n                        setSearch(2);\n                    }}\n                    type=\"submit\"\n                    value=\"Add\"\n                    id=\"save\"\n                />\n            </form>\n        </div>\n    );\n};\n\nexport default SearchForm;\n","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/MapStyles.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/DisplayFavourite.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/services/FavouriteService.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeeklyForecast.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/DailyChart.js",["67","68","69","70","71","72","73","74","75","76","77"],"import React, { useState } from \"react\";\nimport {\n    WiThermometer,\n    WiStrongWind,\n    WiDaySunny,\n    WiRain,\n    WiDayShowers,\n    WiDayCloudy,\n} from \"react-icons/wi\";\nimport { BsGraphUp } from \"react-icons/bs\";\n// import { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Line } from \"react-chartjs-2\";\n\n\n\n\n\n\n\nconst DailyChart = function ({ daily }) {\n    const [chartData, setChartData] = useState({\n        labels: [\n            `${daily[0][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[4][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[8][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[12][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[16][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[20][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n        ],\n        datasets: [\n            {\n                label: \"Temperature graph ℃\",\n                data: [\n                    (daily[0][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[4][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[8][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[12][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[16][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[20][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                ],\n                backgroundColor: [\"rgba(75,192,192,0.6)\"],\n                borderWidth: 4,\n                // yAxisID: \"y-axis-1\",\n            },\n        ],\n    });\n\n    const options = {\n        responsive: true,\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        autoSkip: true,\n                        maxTicksLimit: 10,\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    };\n\n    const averageTemperature = (daily) => {\n        const average = daily.reduce((aver, eachHour) => {\n            return eachHour[\"main\"][\"temp\"] + aver;\n        }, 0);\n\n    };\n\n    const averageWinds = (daily) => {};\n\n    const weatherIcon = (daily) => {\n        const result = averageTemperature(daily);\n    };\n\n    const windIcon = (daily) => {\n        const result = averageWinds(daily);\n    };\n    return (\n        <>\n            {\" \"}\n            <div id=\"daily-chart\">\n                {weatherIcon(daily)}\n                {windIcon(daily)}\n                <Line data={chartData} options={options} />\n            </div>\n        </>\n    );\n};\n\nexport default DailyChart;\n","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/FavouriteCity.js",[],{"ruleId":"78","severity":1,"message":"79","line":13,"column":9,"nodeType":"80","messageId":"81","endLine":13,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":4,"column":5,"nodeType":"80","messageId":"81","endLine":4,"endColumn":11},{"ruleId":"78","severity":1,"message":"83","line":5,"column":5,"nodeType":"80","messageId":"81","endLine":5,"endColumn":15},{"ruleId":"78","severity":1,"message":"84","line":7,"column":17,"nodeType":"80","messageId":"81","endLine":7,"endColumn":25},{"ruleId":"78","severity":1,"message":"85","line":13,"column":23,"nodeType":"80","messageId":"81","endLine":13,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":21,"column":8,"nodeType":"88","endLine":21,"endColumn":10,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"90","line":58,"column":11,"nodeType":"80","messageId":"81","endLine":58,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":63,"column":27,"nodeType":"93","messageId":"94","endLine":63,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":24,"column":17,"nodeType":"97","endLine":24,"endColumn":81},{"ruleId":"78","severity":1,"message":"98","line":3,"column":5,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},{"ruleId":"78","severity":1,"message":"99","line":4,"column":5,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"100","line":5,"column":5,"nodeType":"80","messageId":"81","endLine":5,"endColumn":15},{"ruleId":"78","severity":1,"message":"101","line":6,"column":5,"nodeType":"80","messageId":"81","endLine":6,"endColumn":11},{"ruleId":"78","severity":1,"message":"102","line":7,"column":5,"nodeType":"80","messageId":"81","endLine":7,"endColumn":17},{"ruleId":"78","severity":1,"message":"103","line":8,"column":5,"nodeType":"80","messageId":"81","endLine":8,"endColumn":16},{"ruleId":"78","severity":1,"message":"104","line":10,"column":10,"nodeType":"80","messageId":"81","endLine":10,"endColumn":19},{"ruleId":"78","severity":1,"message":"105","line":22,"column":23,"nodeType":"80","messageId":"81","endLine":22,"endColumn":35},{"ruleId":"78","severity":1,"message":"106","line":65,"column":15,"nodeType":"80","messageId":"81","endLine":65,"endColumn":22},{"ruleId":"78","severity":1,"message":"107","line":74,"column":15,"nodeType":"80","messageId":"81","endLine":74,"endColumn":21},{"ruleId":"78","severity":1,"message":"107","line":78,"column":15,"nodeType":"80","messageId":"81","endLine":78,"endColumn":21},"no-unused-vars","'GoogleMap' is defined but never used.","Identifier","unusedVar","'Marker' is defined but never used.","'InfoWindow' is defined but never used.","'useState' is defined but never used.","'loadError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mapFunction'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'defaultMap' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'WiThermometer' is defined but never used.","'WiStrongWind' is defined but never used.","'WiDaySunny' is defined but never used.","'WiRain' is defined but never used.","'WiDayShowers' is defined but never used.","'WiDayCloudy' is defined but never used.","'BsGraphUp' is defined but never used.","'setChartData' is assigned a value but never used.","'average' is assigned a value but never used.","'result' is assigned a value but never used.",{"desc":"109","fix":"110"},"Update the dependencies array to be: [mapFunction]",{"range":"111","text":"112"},[547,549],"[mapFunction]"]
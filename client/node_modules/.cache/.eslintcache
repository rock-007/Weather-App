[{"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/index.js":"1","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/App.js":"2","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/reportWebVitals.js":"3","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/WeatherContainer.js":"4","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/SearchForm.js":"5","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/City.js":"6","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/DailyChart.js":"7","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js":"8","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeekForecast.js":"9","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/SelectedDayForecast.js":"10","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/SearchForm.js":"11","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeekForecastDay.js":"12"},{"size":501,"mtime":1621784243546,"results":"13","hashOfConfig":"14"},{"size":172,"mtime":1621867228513,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1621592549071,"results":"16","hashOfConfig":"14"},{"size":2333,"mtime":1621867228524,"results":"17","hashOfConfig":"14"},{"size":737,"mtime":1621867228514,"results":"18","hashOfConfig":"14"},{"size":1391,"mtime":1621866432066,"results":"19","hashOfConfig":"14"},{"size":3103,"mtime":1621866432068,"results":"20","hashOfConfig":"14"},{"size":2419,"mtime":1621869740050,"results":"21","hashOfConfig":"14"},{"size":961,"mtime":1621867228515,"results":"22","hashOfConfig":"14"},{"size":1860,"mtime":1621868375354,"results":"23","hashOfConfig":"14"},{"size":781,"mtime":1621868500880,"results":"24","hashOfConfig":"14"},{"size":2212,"mtime":1621868104296,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1efif35",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/index.js",[],["56","57"],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/App.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/reportWebVitals.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/WeatherContainer.js",["58"],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/SearchForm.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/components/City.js",["59"],"import DailyForecast from \"./DailyForecast\";\nimport WeeklyForecast from \"./WeeklyForecast\";\nimport \"./City.css\";\nimport DailyChart from \"../containers/DailyChart\";\n//const city = {daily:null, forcast:null}\n\nconst City = ({ cities }) => {\n    // const eachCity = cities.map((city, index) => {\n    //     console.log(city);\n    //     return <DailyForcast city={city.daily} key={index} />;\n    // });\n    const cityforecast = cities.map((city) => {\n        // console.log(city);\n\n        return (\n            <div class=\"city-card\">\n                <h3 id=\"city-name\">{city.daily.city.name}</h3>\n                <div>\n                    <DailyChart daily={city.daily.list} />\n                </div>\n\n                {city.forecast.list\n                    .map((eachDay, index) => (\n                        <WeeklyForecast\n                            main={eachDay.main}\n                            eachday={eachDay}\n                            visibility={eachDay.visibility}\n                            wind={eachDay.wind}\n                            day={index}\n                            clouds={eachDay[\"clouds\"]}\n                            rain={eachDay.rain}\n                            key={index}\n                        />\n                    ))\n                    .splice(0, 7)}\n            </div>\n        );\n    });\n    return <ul>{cityforecast}</ul>;\n};\n\nexport default City;\n",["60","61"],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/containers/DailyChart.js",["62","63","64","65","66","67","68","69","70","71","72"],"import React, { useState } from \"react\";\nimport {\n    WiThermometer,\n    WiStrongWind,\n    WiDaySunny,\n    WiRain,\n    WiDayShowers,\n    WiDayCloudy,\n} from \"react-icons/wi\";\nimport { BsGraphUp } from \"react-icons/bs\";\n// import { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Line } from \"react-chartjs-2\";\n\nconst DailyChart = function ({ daily }) {\n    console.log(daily);\n    const [chartData, setChartData] = useState({\n        labels: [\n            `${daily[0][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[4][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[8][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[12][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[16][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n            `${daily[20][\"dt_txt\"].match(/\\s([0-9]{2})/g)}:00 `,\n        ],\n        datasets: [\n            {\n                label: \"Temperature graph â„ƒ\",\n                data: [\n                    (daily[0][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[4][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[8][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[12][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[16][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                    (daily[20][\"main\"][\"temp\"] - 273.15).toFixed(0),\n                ],\n                backgroundColor: [\"rgba(75,192,192,0.6)\"],\n                borderWidth: 4,\n                // yAxisID: \"y-axis-1\",\n            },\n        ],\n    });\n\n    const options = {\n        responsive: true,\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        autoSkip: true,\n                        maxTicksLimit: 10,\n                        beginAtZero: true,\n                    },\n                    // type: \"linear\",\n                    // display: true,\n                    // position: \"left\",\n                    // id: \"y-axis-1\",\n                },\n                // ,\n                // {\n                //     type: \"linear\",\n                //     display: true,\n                //     position: \"right\",\n                //     id: \"y-axis-2\",\n                //     gridLines: {\n                //         drawOnArea: false,\n                //     },\n                // },\n            ],\n        },\n    };\n\n    const averageTemperature = (daily) => {\n        const average = daily.reduce((aver, eachHour) => {\n            return eachHour[\"main\"][\"temp\"] + aver;\n        }, 0);\n        console.log(daily.leng);\n    };\n\n    const averageWinds = (daily) => {};\n\n    const weatherIcon = (daily) => {\n        const result = averageTemperature(daily);\n    };\n\n    const windIcon = (daily) => {\n        const result = averageWinds(daily);\n    };\n    return (\n        <>\n            {\" \"}\n            <div>\n                {weatherIcon(daily)}\n                {windIcon(daily)}\n                <Line data={chartData} options={options} />\n            </div>\n        </>\n    );\n};\n\nexport default DailyChart;\n","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js",["73"],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeekForecast.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/SelectedDayForecast.js",["74","75"],"import {\n    WiThermometer,\n    WiStrongWind,\n    WiDaySunny,\n    WiRain,\n    WiDayShowers,\n    WiDayCloudy,\n} from \"react-icons/wi\";\n\nconst SelectedDayForecast = ({ dayForecast }) => {\n    console.log(dayForecast);\n    const clouds = dayForecast.clouds;\n    const rain = dayForecast.rain;\n    const main = dayForecast.main;\n    const wind = dayForecast.wind;\n\n    const getRainCount = function (rain) {\n        const rainCount = 0;\n        for (const rainNumber in rain)\n            if (rainNumber === \"3h\") rainCount = rain[\"3h\"];\n            else if (rainNumber === \"1h\") rainCount = rain[\"1h\"];\n        return rainCount;\n    };\n\n    const displayClouds = function (clouds, rain) {\n        const rainCount = getRainCount(rain);\n        if (clouds > 40 && rainCount > 4) {\n            return <WiDayShowers class=\"icon\" />;\n        } else if (clouds < 40) {\n            return <WiDaySunny class=\"icon\" />;\n        } else {\n            return <WiDayCloudy class=\"icon\" />;\n        }\n    };\n\n    return (\n        <div>\n            <ul id=\"details-list\">\n                <li id=\"sunny-cloudy\">{displayClouds(clouds, rain)}</li>\n                <li id=\"temperature\">\n                    <WiThermometer class=\"icon\" />\n                    <p id=\"min-max-temp\">\n                        Max: {(main.temp_max - 273.15).toFixed(0)} â„ƒ <br /> Min:{\" \"}\n                        {(main.temp_min - 273.15).toFixed(0)} â„ƒ\n                    </p>\n                </li>\n                <li id=\"wind\">\n                    <WiStrongWind class=\"icon\" />\n                    <p>{(wind.speed * 2.2369).toFixed(0)} mph</p>\n                </li>\n                <li id=\"rain\">\n                    <WiRain class=\"icon\" />\n                    <p>{`${getRainCount(rain)} mm`}</p>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default SelectedDayForecast;\n","/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/SearchForm.js",[],"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Components/WeekForecastDay.js",["76"],"import {\n    WiThermometer,\n    WiStrongWind,\n    WiDaySunny,\n    WiRain,\n    WiDayShowers,\n    WiDayCloudy,\n} from \"react-icons/wi\";\n\nconst WeekForecastDay = ({ main, wind, clouds, rain, day }) => {\n    const WeeklyForecast = ({ main, wind, clouds, rain, day }) => {\n        let displayClouds = function (clouds, rain) {\n            let rainCount = getRainCount(rain);\n            if (clouds.all > 40 && rainCount > 4) {\n                return <WiDayShowers class=\"icon\" />;\n            } else if (clouds.all < 40) {\n                return <WiDaySunny class=\"icon\" />;\n            } else {\n                return <WiDayCloudy class=\"icon\" />;\n            }\n        };\n\n        let getRainCount = function (rain) {\n            let rainCount = 0;\n            for (let rainNumber in rain)\n                if (rainNumber === \"3h\") rainCount = rain[\"3h\"];\n                else if (rainNumber === \"1h\") rainCount = rain[\"1h\"];\n            return rainCount;\n        };\n\n        return (\n            <div id=\"day-forecast\">\n                <h4 id=\"day-number\">\n                    {\" \"}\n                    {day === 0\n                        ? \"Today\"\n                        : day === 1\n                        ? \"Tomorrow\"\n                        : `Day ${day + 1}`}\n                </h4>\n                <ul id=\"details-list\">\n                    <li id=\"sunny-cloudy\">{displayClouds(clouds, rain)}</li>\n                    <li id=\"temperature\">\n                        <WiThermometer class=\"icon\" />\n                        <p id=\"min-max-temp\">\n                            Max: {(main.temp_max - 273.15).toFixed(0)} â„ƒ <br />{\" \"}\n                            Min: {(main.temp_min - 273.15).toFixed(0)} â„ƒ\n                        </p>\n                    </li>\n                    <li id=\"wind\">\n                        <WiStrongWind class=\"icon\" />\n                        <p>{(wind[\"speed\"] * 2.2369).toFixed(0)} mph</p>\n                    </li>\n\n                    <li id=\"rain\">\n                        <WiRain class=\"icon\" />\n                        <p>{`${getRainCount(rain)} mm`}</p>\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n};\nexport default WeekForecastDay;\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":13,"column":8,"nodeType":"83","endLine":13,"endColumn":22,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":21},{"ruleId":"77","replacedBy":"89"},{"ruleId":"79","replacedBy":"90"},{"ruleId":"85","severity":1,"message":"91","line":3,"column":5,"nodeType":"87","messageId":"88","endLine":3,"endColumn":18},{"ruleId":"85","severity":1,"message":"92","line":4,"column":5,"nodeType":"87","messageId":"88","endLine":4,"endColumn":17},{"ruleId":"85","severity":1,"message":"93","line":5,"column":5,"nodeType":"87","messageId":"88","endLine":5,"endColumn":15},{"ruleId":"85","severity":1,"message":"94","line":6,"column":5,"nodeType":"87","messageId":"88","endLine":6,"endColumn":11},{"ruleId":"85","severity":1,"message":"95","line":7,"column":5,"nodeType":"87","messageId":"88","endLine":7,"endColumn":17},{"ruleId":"85","severity":1,"message":"96","line":8,"column":5,"nodeType":"87","messageId":"88","endLine":8,"endColumn":16},{"ruleId":"85","severity":1,"message":"97","line":10,"column":10,"nodeType":"87","messageId":"88","endLine":10,"endColumn":19},{"ruleId":"85","severity":1,"message":"98","line":17,"column":23,"nodeType":"87","messageId":"88","endLine":17,"endColumn":35},{"ruleId":"85","severity":1,"message":"99","line":74,"column":15,"nodeType":"87","messageId":"88","endLine":74,"endColumn":22},{"ruleId":"85","severity":1,"message":"100","line":83,"column":15,"nodeType":"87","messageId":"88","endLine":83,"endColumn":21},{"ruleId":"85","severity":1,"message":"100","line":87,"column":15,"nodeType":"87","messageId":"88","endLine":87,"endColumn":21},{"ruleId":"81","severity":1,"message":"101","line":16,"column":8,"nodeType":"83","endLine":16,"endColumn":22,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":20,"column":38,"nodeType":"87","messageId":"105","endLine":20,"endColumn":47},{"ruleId":"103","severity":1,"message":"104","line":21,"column":43,"nodeType":"87","messageId":"105","endLine":21,"endColumn":52},{"ruleId":"85","severity":1,"message":"106","line":11,"column":11,"nodeType":"87","messageId":"88","endLine":11,"endColumn":25},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCities'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'DailyForecast' is defined but never used.","Identifier","unusedVar",["107"],["108"],"'WiThermometer' is defined but never used.","'WiStrongWind' is defined but never used.","'WiDaySunny' is defined but never used.","'WiRain' is defined but never used.","'WiDayShowers' is defined but never used.","'WiDayCloudy' is defined but never used.","'BsGraphUp' is defined but never used.","'setChartData' is assigned a value but never used.","'average' is assigned a value but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getForecasts'. Either include it or remove the dependency array.",["110"],"no-const-assign","'rainCount' is constant.","const","'WeeklyForecast' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [getCities, selectedCity]",{"range":"115","text":"116"},"Update the dependencies array to be: [getForecasts, selectedCity]",{"range":"117","text":"118"},[393,407],"[getCities, selectedCity]",[645,659],"[getForecasts, selectedCity]"]
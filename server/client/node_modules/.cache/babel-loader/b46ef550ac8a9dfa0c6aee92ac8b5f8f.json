{"ast":null,"code":"var _jsxFileName = \"/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport DisplayFavourite from \"../Components/DisplayFavourite\";\nimport UkMap from \"./UkMap\";\nimport { getFavourites, postFavourite, deleteFavourite } from \"../services/FavouriteService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherContainer = () => {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [favourites, setFavourites] = useState(null);\n  const [displayFavourites, setDisplayFavourites] = useState(null);\n  useEffect(() => {\n    if (selectedCity != null) {\n      getCities(selectedCity);\n    }\n  }, [selectedCity]);\n  useEffect(() => {\n    getFavourite();\n  }, []);\n  useEffect(() => {\n    if (favourites !== null) {\n      getFavouriteCities(favourites);\n    }\n  }, [favourites]);\n\n  const getFavouriteCities = function (favourites) {\n    console.log(favourites[0]);\n    let favouiteFetch = favourites[0].map(eachCity => {\n      return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${eachCity[\"name\"]}&appid=3031aac4ff517ddfc83b94a403d374b0`);\n    });\n    console.log(favouiteFetch);\n    Promise.all(favouiteFetch).then(res => {\n      console.log(res);\n      return Promise.all(res.map(function (res) {\n        return res.json();\n      }));\n    }).then(result => setDisplayFavourites(result));\n  };\n\n  const getCities = function (selectedCity) {\n    const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n    const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n    Promise.all([fetch(cityApi), fetch(forecastApi)]).then(res => {\n      return Promise.all(res.map(function (res) {\n        return res.json();\n      }));\n    }).then(result => setCities([{\n      daily: result[0],\n      forecast: result[1]\n    }]));\n  };\n\n  const onCitySubmit = function (city) {\n    console.log(city);\n    setSelectedCity(city);\n  };\n\n  const onClick = function (favourite) {\n    setFavourites([...favourites, favourite]);\n    console.log(favourites);\n  };\n\n  const getFavourite = () => {\n    getFavourites().then(result => setFavourites([result])); //setFavourites([...favourites, result]);\n  };\n\n  const addFavourite = favouriteCity => {\n    // const temp = favourites.map(favourite => favourite);\n    // temp.push(favourite);\n    // setSelectedCity(temp);\n    console.log(favouriteCity);\n    postFavourite(favouriteCity).then(() => getFavourite());\n  };\n\n  const deleteFav = city => {\n    console.log(favourites[0]); // delete and rerender\n\n    const result = favourites[0].filter(eachCity => eachCity[\"name\"].toLowerCase() !== city.toLowerCase());\n    console.log(result);\n    deleteFavourite(city).then(() => {\n      setFavourites([result]);\n    });\n  };\n\n  const favForcast = favCity => {\n    setSelectedCity(favCity);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      cities: cities,\n      onCitySubmit: onCitySubmit,\n      onClick: onClick,\n      addFavourite: addFavourite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), displayFavourites != null ? /*#__PURE__*/_jsxDEV(DisplayFavourite, {\n      displayFavourites1: displayFavourites,\n      deleteFavourite2: deleteFav,\n      favouriteforcast2: favForcast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(UkMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), selectedCity != null ? /*#__PURE__*/_jsxDEV(City, {\n      cities: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherContainer, \"m69ktEUO97h/VD1/WDAPsB2t4Xw=\");\n\n_c = WeatherContainer;\nexport default WeatherContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherContainer\");","map":{"version":3,"sources":["/Users/umairRocks/codeclan_work/week_09/weather-app/client/src/Containers/WeatherContainer.js"],"names":["React","useState","useEffect","City","SearchForm","DisplayFavourite","UkMap","getFavourites","postFavourite","deleteFavourite","WeatherContainer","cities","setCities","selectedCity","setSelectedCity","favourites","setFavourites","displayFavourites","setDisplayFavourites","getCities","getFavourite","getFavouriteCities","console","log","favouiteFetch","map","eachCity","fetch","Promise","all","then","res","json","result","cityApi","forecastApi","daily","forecast","onCitySubmit","city","onClick","favourite","addFavourite","favouriteCity","deleteFav","filter","toLowerCase","favForcast","favCity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,eAHJ,QAIO,8BAJP;;;AAMA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACgB,iBAAD,EAAoBC,oBAApB,IAA4CjB,QAAQ,CAAC,IAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,YAAY,IAAI,IAApB,EAA0B;AACtBM,MAAAA,SAAS,CAACN,YAAD,CAAT;AACH;AACJ,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,UAAU,KAAK,IAAnB,EAAyB;AACrBM,MAAAA,kBAAkB,CAACN,UAAD,CAAlB;AACH;AACJ,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;;AAMA,QAAMM,kBAAkB,GAAG,UAAUN,UAAV,EAAsB;AAC7CO,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAU,CAAC,CAAD,CAAtB;AACA,QAAIS,aAAa,GAAGT,UAAU,CAAC,CAAD,CAAV,CAAcU,GAAd,CAAmBC,QAAD,IAAc;AAChD,aAAOC,KAAK,CACP,oDAAmDD,QAAQ,CAAC,MAAD,CAAS,yCAD7D,CAAZ;AAGH,KAJmB,CAApB;AAKAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ,EACKM,IADL,CACWC,GAAD,IAAS;AACXT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,aAAOH,OAAO,CAACC,GAAR,CACHE,GAAG,CAACN,GAAJ,CAAQ,UAAUM,GAAV,EAAe;AACnB,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAFD,CADG,CAAP;AAKH,KARL,EASKF,IATL,CASWG,MAAD,IAAYf,oBAAoB,CAACe,MAAD,CAT1C;AAUH,GAnBD;;AAqBA,QAAMd,SAAS,GAAG,UAAUN,YAAV,EAAwB;AACtC,UAAMqB,OAAO,GAAI,4DAA2DrB,YAAa,yCAAzF;AACA,UAAMsB,WAAW,GAAI,qDAAoDtB,YAAa,yCAAtF;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACO,OAAD,CAAN,EAAiBP,KAAK,CAACQ,WAAD,CAAtB,CAAZ,EACKL,IADL,CACWC,GAAD,IAAS;AACX,aAAOH,OAAO,CAACC,GAAR,CACHE,GAAG,CAACN,GAAJ,CAAQ,UAAUM,GAAV,EAAe;AACnB,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAFD,CADG,CAAP;AAKH,KAPL,EAQKF,IARL,CAQWG,MAAD,IACFrB,SAAS,CAAC,CAAC;AAAEwB,MAAAA,KAAK,EAAEH,MAAM,CAAC,CAAD,CAAf;AAAoBI,MAAAA,QAAQ,EAAEJ,MAAM,CAAC,CAAD;AAApC,KAAD,CAAD,CATjB;AAWH,GAdD;;AAgBA,QAAMK,YAAY,GAAG,UAAUC,IAAV,EAAgB;AACjCjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACAzB,IAAAA,eAAe,CAACyB,IAAD,CAAf;AACH,GAHD;;AAKA,QAAMC,OAAO,GAAG,UAAUC,SAAV,EAAqB;AACjCzB,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB0B,SAAhB,CAAD,CAAb;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACH,GAHD;;AAKA,QAAMK,YAAY,GAAG,MAAM;AACvBb,IAAAA,aAAa,GAAGuB,IAAhB,CAAsBG,MAAD,IAAYjB,aAAa,CAAC,CAACiB,MAAD,CAAD,CAA9C,EADuB,CAGvB;AACH,GAJD;;AAMA,QAAMS,YAAY,GAAIC,aAAD,IAAmB;AACpC;AACA;AACA;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,aAAZ;AACAnC,IAAAA,aAAa,CAACmC,aAAD,CAAb,CAA6Bb,IAA7B,CAAkC,MAAMV,YAAY,EAApD;AACH,GAND;;AAOA,QAAMwB,SAAS,GAAIL,IAAD,IAAU;AACxBjB,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAU,CAAC,CAAD,CAAtB,EADwB,CAExB;;AAEA,UAAMkB,MAAM,GAAGlB,UAAU,CAAC,CAAD,CAAV,CAAc8B,MAAd,CACVnB,QAAD,IAAcA,QAAQ,CAAC,MAAD,CAAR,CAAiBoB,WAAjB,OAAmCP,IAAI,CAACO,WAAL,EADtC,CAAf;AAGAxB,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AAEAxB,IAAAA,eAAe,CAAC8B,IAAD,CAAf,CAAsBT,IAAtB,CAA2B,MAAM;AAC7Bd,MAAAA,aAAa,CAAC,CAACiB,MAAD,CAAD,CAAb;AACH,KAFD;AAGH,GAZD;;AAaA,QAAMc,UAAU,GAAIC,OAAD,IAAa;AAC5BlC,IAAAA,eAAe,CAACkC,OAAD,CAAf;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,MAAM,EAAErC,MADZ;AAEI,MAAA,YAAY,EAAE2B,YAFlB;AAGI,MAAA,OAAO,EAAEE,OAHb;AAII,MAAA,YAAY,EAAEE;AAJlB;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKzB,iBAAiB,IAAI,IAArB,gBACG,QAAC,gBAAD;AACI,MAAA,kBAAkB,EAAEA,iBADxB;AAEI,MAAA,gBAAgB,EAAE2B,SAFtB;AAGI,MAAA,iBAAiB,EAAEG;AAHvB;AAAA;AAAA;AAAA;AAAA,YADH,GAMG,IAbR,eAcI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAdJ,EAeKlC,YAAY,IAAI,IAAhB,gBAAuB,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAAvB,GAAkD,IAfvD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArHD;;GAAMD,gB;;KAAAA,gB;AAuHN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport City from \"../Components/City\";\nimport SearchForm from \"../Components/SearchForm\";\nimport DisplayFavourite from \"../Components/DisplayFavourite\";\nimport UkMap from \"./UkMap\";\nimport {\n    getFavourites,\n    postFavourite,\n    deleteFavourite,\n} from \"../services/FavouriteService\";\n\nconst WeatherContainer = () => {\n    const [cities, setCities] = useState([]);\n    const [selectedCity, setSelectedCity] = useState(null);\n    const [favourites, setFavourites] = useState(null);\n    const [displayFavourites, setDisplayFavourites] = useState(null);\n\n    useEffect(() => {\n        if (selectedCity != null) {\n            getCities(selectedCity);\n        }\n    }, [selectedCity]);\n\n    useEffect(() => {\n        getFavourite();\n    }, []);\n\n    useEffect(() => {\n        if (favourites !== null) {\n            getFavouriteCities(favourites);\n        }\n    }, [favourites]);\n\n    const getFavouriteCities = function (favourites) {\n        console.log(favourites[0]);\n        let favouiteFetch = favourites[0].map((eachCity) => {\n            return fetch(\n                `http://api.openweathermap.org/data/2.5/weather?q=${eachCity[\"name\"]}&appid=3031aac4ff517ddfc83b94a403d374b0`\n            );\n        });\n        console.log(favouiteFetch);\n\n        Promise.all(favouiteFetch)\n            .then((res) => {\n                console.log(res);\n                return Promise.all(\n                    res.map(function (res) {\n                        return res.json();\n                    })\n                );\n            })\n            .then((result) => setDisplayFavourites(result));\n    };\n\n    const getCities = function (selectedCity) {\n        const cityApi = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${selectedCity}&appid=3031aac4ff517ddfc83b94a403d374b0`;\n        const forecastApi = `http://api.openweathermap.org/data/2.5/forecast?q=${selectedCity}&appid=1a9a20046a26886e891582ce46507106`;\n        Promise.all([fetch(cityApi), fetch(forecastApi)])\n            .then((res) => {\n                return Promise.all(\n                    res.map(function (res) {\n                        return res.json();\n                    })\n                );\n            })\n            .then((result) =>\n                setCities([{ daily: result[0], forecast: result[1] }])\n            );\n    };\n\n    const onCitySubmit = function (city) {\n        console.log(city);\n        setSelectedCity(city);\n    };\n\n    const onClick = function (favourite) {\n        setFavourites([...favourites, favourite]);\n        console.log(favourites);\n    };\n\n    const getFavourite = () => {\n        getFavourites().then((result) => setFavourites([result]));\n\n        //setFavourites([...favourites, result]);\n    };\n\n    const addFavourite = (favouriteCity) => {\n        // const temp = favourites.map(favourite => favourite);\n        // temp.push(favourite);\n        // setSelectedCity(temp);\n        console.log(favouriteCity);\n        postFavourite(favouriteCity).then(() => getFavourite());\n    };\n    const deleteFav = (city) => {\n        console.log(favourites[0]);\n        // delete and rerender\n\n        const result = favourites[0].filter(\n            (eachCity) => eachCity[\"name\"].toLowerCase() !== city.toLowerCase()\n        );\n        console.log(result);\n\n        deleteFavourite(city).then(() => {\n            setFavourites([result]);\n        });\n    };\n    const favForcast = (favCity) => {\n        setSelectedCity(favCity);\n    };\n    return (\n        <div>\n            <SearchForm\n                cities={cities}\n                onCitySubmit={onCitySubmit}\n                onClick={onClick}\n                addFavourite={addFavourite}\n            />\n            {displayFavourites != null ? (\n                <DisplayFavourite\n                    displayFavourites1={displayFavourites}\n                    deleteFavourite2={deleteFav}\n                    favouriteforcast2={favForcast}\n                />\n            ) : null}\n            <UkMap/>\n            {selectedCity != null ? <City cities={cities} /> : null}\n        </div>\n    );\n};\n\nexport default WeatherContainer;\n"]},"metadata":{},"sourceType":"module"}